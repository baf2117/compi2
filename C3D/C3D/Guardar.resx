<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>